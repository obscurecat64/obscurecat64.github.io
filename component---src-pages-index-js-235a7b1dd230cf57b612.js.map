{"version":3,"file":"component---src-pages-index-js-235a7b1dd230cf57b612.js","mappings":"2OAwEA,EA/DkB,SAAH,GAA4B,IAAD,EAArBA,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SACnBC,GAAkC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,QACzCC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAM,CAACR,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,CAACG,MAAM,cACX,gBAAC,IAAG,MACJ,uLAUJ,gBAAC,IAAM,CAACJ,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,CAACG,MAAM,cACX,gBAAC,IAAG,MACJ,sBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAAAC,GAAS,IAAD,EACXR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEE,UCrCU,sCDsCVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIT,EAAKE,OAAOC,KAAMO,SAAS,OACnC,wBAAMA,SAAS,YAAYlB,KAG/B,6BAAQQ,EAAKC,YAAYU,MACzB,6BACwB,QADxB,EACGX,EAAKC,YAAYW,YAAI,aAArB,EAAuBb,KAAI,SAAAc,GAAG,OAC7B,gBAAC,IAAG,CAACrB,MAAOqB,GAAO,MAIzB,+BACE,qBACEC,wBAAyB,CACvBC,OAAQf,EAAKC,YAAYe,aAAehB,EAAKiB,SAE/CP,SAAS,kBAMrB,KAIR,C","sources":["webpack://gatsby-starter-blog/./src/pages/index.js","webpack://gatsby-starter-blog/./src/pages/index.module.css"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { postListItem } from \"./index.module.css\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Tag from \"../components/tag\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className={postListItem}\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                  <small>\n                    {post.frontmatter.tags?.map(tag => (\n                      <Tag title={tag} />\n                    ))}\n                  </small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nexport var postListItem = \"index-module--post-list-item--cad2d\";"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","tags","tag","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}